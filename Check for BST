class Solution {
  public:
    // Function to check whether a Binary Tree is BST or not.
    // pair<int,bool>solve(Node*root){
    //     if(root==NULL){
    //         return {INT_MIN,true};
    //     }
        
    //     if(root->left==NULL&&root->right==NULL){
    //         return {root->data,true};
    //     }
        
    //     pair<int,bool>left=solve(root->left);
    //     pair<int,bool>right=solve(root->right);
        
    //     if(root->data>left.first&&root->data<right.first&&left.second&&right.second){
    //         return {root->data,true};
    //     }
    //     else{
    //         return{max(root->data,max(left.first,right.first)),false};
    //     }
        
        
        
    // }
    bool sorted(vector<int>ans){
         for(int i=0;i<ans.size()-1;i++){
             if(ans[i]>=ans[i+1]){
                 return false;
             }
         }
         return true;
    }
    void inorder(Node*root,vector<int>&ans){
        if(root==NULL)
         return;
         
         inorder(root->left,ans);
         ans.push_back(root->data);
         inorder(root->right,ans);
    }
    bool isBST(Node* root) {
        // Your code here
      vector<int>ans;
      inorder(root,ans);
      bool a=sorted(ans);
      return a;
    }
};
